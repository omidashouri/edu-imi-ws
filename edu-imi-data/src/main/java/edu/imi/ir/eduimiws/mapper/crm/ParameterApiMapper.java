package edu.imi.ir.eduimiws.mapper.crm;

import edu.imi.ir.eduimiws.domain.crm.ParameterApiEntity;
import edu.imi.ir.eduimiws.mapper.CycleAvoidingMappingContext;
import edu.imi.ir.eduimiws.models.dto.crm.ParameterApiDto;
import edu.imi.ir.eduimiws.utilities.PersistenceUtils;
import edu.imi.ir.eduimiws.utilities.PublicIdUtil;
import org.mapstruct.*;

import java.util.List;

@Mapper(componentModel = "spring",
        imports = {PublicIdUtil.class},
        nullValuePropertyMappingStrategy = NullValuePropertyMappingStrategy.SET_TO_NULL,
        nullValueCheckStrategy = NullValueCheckStrategy.ALWAYS)
public interface ParameterApiMapper {

    @Named("parameterApiEntityToParameterApiDto")
    @Mappings({
            @Mapping(source = "id", target = "id"),
            @Mapping(source = "parameter.id", target = "parameterId"),
//            @Mapping(source = "parameter", target = "parameterDto",qualifiedByName = "parameterEntityToParameterDto"),
            @Mapping(source = "parameterPublicId", target = "parameterPublicId"),
            @Mapping(source = "deletedParameterId", target = "deletedParameterId"),
            @Mapping(source = "createDateTs", target = "createDateTs"),
            @Mapping(source = "editDateTs", target = "editDateTs"),
            @Mapping(source = "deleteDateTs", target = "deleteDateTs"),

    })
    @BeanMapping(ignoreByDefault = true)
    ParameterApiDto parameterApiEntityToParameterApiDto(ParameterApiEntity parameterApiEntity,
                                                   @Context CycleAvoidingMappingContext context);
//    ParameterApi is Generated By Trigger

    @IterableMapping(qualifiedByName = "parameterApiEntityToParameterApiDto")
    List<ParameterApiDto> contactApiEntitiesToParameterApiDtos(List<ParameterApiEntity> parameterApiEntities,
                                                               @Context CycleAvoidingMappingContext context);

    @BeforeMapping
    @InheritConfiguration(name = "parameterApiEntityToParameterApiDto")
    default void handleParameterApiPublicIds(ParameterApiEntity parameterApiEntity,
                                           @MappingTarget ParameterApiDto parameterApiDto) {
        new PersistenceUtils().cleanFromProxyByReadMethod(parameterApiEntity);
    }
}
